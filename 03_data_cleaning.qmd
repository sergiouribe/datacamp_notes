---
title: "03_cleaning"
format: html
editor: visual
---

```{r}
pacman::p_load(tidyverse, 
               ggplot2movies, 
               httr, 
               here, 
               jsonlite)
```

```{r}
kaggle_api_key <- fromJSON("/home/sergiouribe/.kaggle/kaggle.json")$key
```

```{r}
# # Define the dataset owner and name
# dataset_owner <- "benhamner"
# dataset_name <- "sf-bay-area-bike-share"

```

```{r}
# # Construct the Kaggle API URL for dataset download
# api_url <- paste0("https://www.kaggle.com/api/v1/datasets/download/", dataset_owner, "/", dataset_name)
# 
# # Make the API request to download the dataset
# response <- GET(api_url,
#                 add_headers(Authorization = paste("Bearer", kaggle_api_key)),
#                 write_disk("sf_bay_area_bike_share.zip", overwrite = TRUE))
```

```{r}
bike_share_rides <- read_csv(unz(here("data", "sf_bay_area_bike_share.zip"), "trip.csv"))
```

## Cleaning minutes

```{r}
bike_share_rides <- bike_share_rides %>%
  mutate(duration_trimmed = str_remove(duration, "minutes"),
         duration_mins = as.numeric(duration_trimmed))
```

```{r}
glimpse(bike_share_rides)
```

## Data type constraints

## Range constraints

```{r}
movies <- ggplot2movies::movies


head(movies)
```

```{r}
movies |> 
  ggplot(aes(rating)) + 
  geom_histogram()
```
