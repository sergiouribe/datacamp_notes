---
title: "04_1_baby_datasets_dplyr_practice"
format: html
editor: visual
---

```{r}
pacman::p_load(tidyverse, 
               janitor, 
               here)
```

```{r}
babynames_boys <- read.delim(here("datasets", "babynames_boys_1920_2020_all_data.csv"))
```

```{r}
babynames_girls <- read.delim(here("datasets", "babynames_girls_1920_2020_all_data.csv"))
```

```{r}
# create one dataset
bind_rows(babynames_boys,babynames_girls ) |> 
  tabyl(gender)
```

```{r}
bind_rows(babynames_boys,babynames_girls ) |> 
  tabyl(gender)

```

```{r}
babynames <- bind_rows(babynames_boys,babynames_girls)
```

```{r}
glimpse(babynames)
```

## Convert to wide to long, and remove the X at the start of years

```{r}
babynames <- babynames |> 
  select(-region) |> 
  pivot_longer(cols = X1920:X2020, 
               names_to = "year", 
               values_to = "n") |> 
  mutate(year = str_remove_all(year, "X"), 
         year = as_factor(year))
```

```{r}
rm(babynames_boys, babynames_girls)
```

```{r}
babynames
```

### Frequency of a name

```{r}
babynames |> 
  filter(name == "LAIMA")
```

```{r}
babynames |> 
  filter(name == "LAIMA") |> 
  ggplot(aes(x = year, 
             y = n, 
             group = name)) +  #check this
  geom_line()
```

```{r}
babynames |> 
  filter(name %in% c("LAIMA", "LAURA")) |> 
  ggplot(aes(x = year, 
             y = n, 
             group = name, 
             color = name)) +  #check this
  geom_line()
```

## When was most common each name?

```{r}
babynames |> 
  group_by(name) |> 
  slice_max(n, n = 1) |> 
  arrange(desc(year))
```

## What is the most common name by year?

```{r}
babynames |> 
  group_by(year) |> 
  slice_max(n, n = 1) |> 
  arrange(desc(year))
```

ANOTHER BABYNAMES DATASET

```{r}
babynames <- read_csv("https://raw.githubusercontent.com/hadley/data-baby-names/refs/heads/master/baby-names-by-state.csv")
```

## Summarize total by year

```{r}
babynames |> 
  group_by(as.factor(year)) |> 
  mutate(year_total = sum(number, na.rm = T)) |> 
  select(state:sex, year_total )
```

So far: \
**Grouped Mutates**: You discovered how to use `group_by` and `mutate` together to calculate totals within each group. For instance, grouping by year to find the total number of babies born each year.

-   **Window Functions**: The lesson introduced `slice_max()`, a function that helps identify the maximum value within each group, such as finding the year each name was most popular.

-   **Normalization**: You learned to normalize data by dividing each name's frequency by the maximum frequency of that name, making every name's peak value 1. This technique allows for comparing the relative change in popularity of names.

-   **Visualization**: Using `ggplot2`, you visualized the normalized popularity of names over time. The exercise guided you through creating a line plot to show the change in popularity of the names Steven, Thomas, and Matthew, demonstrating how to filter and plot data effectively.

```         
names_normalized <- babynames %>%
                     group_by(name) %>%
                     mutate(name_total = sum(number),
                            name_max = max(number)) %>%
                     ungroup() %>%
                     mutate(fraction_max = number / name_max)

ggplot(names_filtered, aes(x = year, y = fraction_max, color = name)) +
  geom_line()
```
